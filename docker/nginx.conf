events {
    worker_connections 1024;
}

http {
    # Include default MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # WASM MIME type is already defined in mime.types in recent nginx versions
    # Only add if missing (older nginx versions)
    # types {
    #     application/wasm wasm;
    # }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/wasm;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # WASM files with correct MIME type and caching
        location ~ \.wasm$ {
            add_header Content-Type application/wasm;
            add_header Cache-Control "public, max-age=31536000, immutable";
            try_files $uri =404;
        }

        # JavaScript files with caching
        location ~ \.(js|mjs)$ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            try_files $uri =404;
        }

        # Config file (no caching)
        location = /config.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            try_files $uri =404;
        }

        # CSS and other static assets
        location ~ \.(css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            try_files $uri =404;
        }

        # Main application (SPA fallback)
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Health check endpoint
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}