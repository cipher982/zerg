/*
 * Zerg Agent Platform API
 *
 * Complete REST API specification for the Zerg Agent Platform. This schema is the single source of truth for frontend-backend contracts.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowTemplate {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "category")]
    pub category: String,
    #[serde(rename = "canvas")]
    pub canvas: models::WorkflowDataOutput,
    #[serde(rename = "tags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Option<Vec<String>>>,
    #[serde(rename = "preview_image_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub preview_image_url: Option<Option<String>>,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "created_by")]
    pub created_by: i32,
    #[serde(rename = "is_public")]
    pub is_public: bool,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl WorkflowTemplate {
    pub fn new(name: String, category: String, canvas: models::WorkflowDataOutput, id: i32, created_by: i32, is_public: bool, created_at: String, updated_at: String) -> WorkflowTemplate {
        WorkflowTemplate {
            name,
            description: None,
            category,
            canvas,
            tags: None,
            preview_image_url: None,
            id,
            created_by,
            is_public,
            created_at,
            updated_at,
        }
    }
}

