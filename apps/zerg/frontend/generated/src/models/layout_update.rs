/*
 * Zerg Agent Platform API
 *
 * Complete REST API specification for the Zerg Agent Platform. This schema is the single source of truth for frontend-backend contracts.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LayoutUpdate {
    #[serde(rename = "nodes")]
    pub nodes: std::collections::HashMap<String, models::NodePos>,
    #[serde(rename = "viewport", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub viewport: Option<Option<Box<models::Viewport>>>,
}

impl LayoutUpdate {
    pub fn new(nodes: std::collections::HashMap<String, models::NodePos>) -> LayoutUpdate {
        LayoutUpdate {
            nodes,
            viewport: None,
        }
    }
}

