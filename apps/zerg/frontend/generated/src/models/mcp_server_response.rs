/*
 * Zerg Agent Platform API
 *
 * Complete REST API specification for the Zerg Agent Platform. This schema is the single source of truth for frontend-backend contracts.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// McpServerResponse : Response model for MCP server info.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct McpServerResponse {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "tools")]
    pub tools: Vec<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// Error message if status is 'error'
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<String>,
}

impl McpServerResponse {
    /// Response model for MCP server info.
    pub fn new(name: String, url: String, tools: Vec<String>) -> McpServerResponse {
        McpServerResponse {
            name,
            url,
            tools,
            status: None,
            error: None,
        }
    }
}

