/*
 * Zerg Agent Platform API
 *
 * Complete REST API specification for the Zerg Agent Platform. This schema is the single source of truth for frontend-backend contracts.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserUpdate {
    #[serde(rename = "display_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<Option<String>>,
    #[serde(rename = "avatar_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub avatar_url: Option<Option<String>>,
    #[serde(rename = "prefs", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub prefs: Option<Option<serde_json::Value>>,
}

impl UserUpdate {
    pub fn new() -> UserUpdate {
        UserUpdate {
            display_name: None,
            avatar_url: None,
            prefs: None,
        }
    }
}

