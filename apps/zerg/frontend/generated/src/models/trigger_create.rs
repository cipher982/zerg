/*
 * Zerg Agent Platform API
 *
 * Complete REST API specification for the Zerg Agent Platform. This schema is the single source of truth for frontend-backend contracts.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TriggerCreate {
    #[serde(rename = "agent_id")]
    pub agent_id: i32,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "config", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub config: Option<Option<serde_json::Value>>,
}

impl TriggerCreate {
    pub fn new(agent_id: i32) -> TriggerCreate {
        TriggerCreate {
            agent_id,
            r#type: None,
            config: None,
        }
    }
}

