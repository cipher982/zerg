/*
 * Zerg Agent Platform API
 *
 * Complete REST API specification for the Zerg Agent Platform. This schema is the single source of truth for frontend-backend contracts.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Trigger {
    #[serde(rename = "agent_id")]
    pub agent_id: i32,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "config", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub config: Option<Option<serde_json::Value>>,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "secret")]
    pub secret: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
}

impl Trigger {
    pub fn new(agent_id: i32, id: i32, secret: String, created_at: String) -> Trigger {
        Trigger {
            agent_id,
            r#type: None,
            config: None,
            id,
            secret,
            created_at,
        }
    }
}

