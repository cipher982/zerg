/*
 * Zerg Agent Platform API
 *
 * Complete REST API specification for the Zerg Agent Platform. This schema is the single source of truth for frontend-backend contracts.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TokenOut {
    #[serde(rename = "access_token")]
    pub access_token: String,
    #[serde(rename = "token_type", skip_serializing_if = "Option::is_none")]
    pub token_type: Option<String>,
    #[serde(rename = "expires_in")]
    pub expires_in: i32,
}

impl TokenOut {
    pub fn new(access_token: String, expires_in: i32) -> TokenOut {
        TokenOut {
            access_token,
            token_type: None,
            expires_in,
        }
    }
}

