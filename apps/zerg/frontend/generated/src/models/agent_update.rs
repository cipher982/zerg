/*
 * Zerg Agent Platform API
 *
 * Complete REST API specification for the Zerg Agent Platform. This schema is the single source of truth for frontend-backend contracts.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AgentUpdate {
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "system_instructions", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub system_instructions: Option<Option<String>>,
    #[serde(rename = "task_instructions", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub task_instructions: Option<Option<String>>,
    #[serde(rename = "model", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub model: Option<Option<String>>,
    #[serde(rename = "status", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub status: Option<Option<models::AgentStatus>>,
    #[serde(rename = "schedule", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub schedule: Option<Option<String>>,
    #[serde(rename = "config", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub config: Option<Option<serde_json::Value>>,
    #[serde(rename = "last_error", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_error: Option<Option<String>>,
    #[serde(rename = "allowed_tools", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub allowed_tools: Option<Option<Vec<String>>>,
}

impl AgentUpdate {
    pub fn new() -> AgentUpdate {
        AgentUpdate {
            name: None,
            system_instructions: None,
            task_instructions: None,
            model: None,
            status: None,
            schedule: None,
            config: None,
            last_error: None,
            allowed_tools: None,
        }
    }
}

