[1A[2K[2m[WebServer] [22m[build-only] 🔧 building frontend (debug)…

[1A[2K[2m[WebServer] [22m[build-only] 🏗  wasm-pack build …

[1A[2K[2m[WebServer] [22m[INFO]: 🎯  Checking for the Wasm target...

[1A[2K[2m[WebServer] [22m[INFO]: 🌀  Compiling to Wasm...

[1A[2K[2m[WebServer] [22m   Compiling agent-platform-frontend v0.1.0 (/Users/davidrose/git/zerg/frontend)

[1A[2K[2m[WebServer] [22mwarning: unused import: `ws_manager::init_chat_view_ws`
[2m[WebServer] [22m --> src/components/chat/mod.rs:2:9
[2m[WebServer] [22m  |
[2m[WebServer] [22m2 | pub use ws_manager::init_chat_view_ws;
[2m[WebServer] [22m  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2m[WebServer] [22m  |
[2m[WebServer] [22m  = note: `#[warn(unused_imports)]` on by default
[2m[WebServer] [22m

[1A[2K[2m[WebServer] [22mwarning: unused import: `super::*`
[2m[WebServer] [22m  --> src/generated/tool_definitions.rs:83:9
[2m[WebServer] [22m   |
[2m[WebServer] [22m83 |     use super::*;
[2m[WebServer] [22m   |

[1A[2K[2m[WebServer] [22m         ^^^^^^^^
[2m[WebServer] [22m

[1A[2K[2m[WebServer] [22mwarning: unused variable: `client_id_str`
[2m[WebServer] [22m   --> src/command_executors.rs:654:17
[2m[WebServer] [22m    |
[2m[WebServer] [22m654 |             let client_id_str = client_id.map(|id| id.to_string()).unwrap_or_default();
[2m[WebServer] [22m    |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id_str`
[2m[WebServer] [22m    |
[2m[WebServer] [22m    = 

[1A[2K[2m[WebServer] [22mnote: `#[warn(unused_variables)]` on by default
[2m[WebServer] [22m

[1A[2K[2m[WebServer] [22mwarning: `agent-platform-frontend` (lib) generated 3 warnings (run `cargo fix --lib -p agent-platform-frontend` to apply 2 suggestions)
[2m[WebServer] [22m    Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.27s

[1A[2K[2m[WebServer] [22m[INFO]: ⬇️  Installing wasm-bindgen...

[1A[2K[2m[WebServer] [22m[INFO]: Optional fields missing from Cargo.toml: 'description', 'repository', and 'license'. These are not necessary, but recommended

[1A[2K[2m[WebServer] [22m[INFO]: ✨   Done in 1.80s
[2m[WebServer] [22m[INFO]: 📦   Your wasm pkg is ready to publish at /Users/davidrose/git/zerg/frontend/pkg.

[1A[2K[2m[WebServer] [22m[build-only] 📦 copying WASM artifacts to www...

[1A[2K[2m[WebServer] [22m[build-only] ✍️  writing bootstrap.js …

[1A[2K[2m[WebServer] [22m[build-only] ✍️  writing config.js …

[1A[2K[2m[WebServer] [22m[build-only] ✅ build complete (output in frontend/www/)


Running 3 tests using 2 workers

[1A[2K[1/3] tests/agent_creation_full.spec.ts:15:7 › Agent Creation Full Workflow › Complete agent creation and isolation test
[1A[2K[2/3] tests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution
[1A[2Ktests/agent_creation_full.spec.ts:15:7 › Agent Creation Full Workflow › Complete agent creation and isolation test
🔍 Starting complete agent creation test...

[1A[2K📊 Worker ID: 0

[1A[2K📊 Step 0: Resetting database...

[1A[2Ktests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution
🚀 Starting complete canvas workflow test...

[1A[2K📊 Worker ID: 1

[1A[2K📊 Step 1: Creating test agent...

[1A[2K[2m[WebServer] [22mWARNING - Resetting database - dropping all tables

[1A[2Ktests/agent_creation_full.spec.ts:15:7 › Agent Creation Full Workflow › Complete agent creation and isolation test
✅ Database reset successful

[1A[2K📊 Step 1: Verifying empty state...

[1A[2Ktests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution
✅ Test agent created with ID: [33m1[39m

[1A[2K📊 Step 2: Navigating to application...

[1A[2Ktests/agent_creation_full.spec.ts:15:7 › Agent Creation Full Workflow › Complete agent creation and isolation test
📊 Initial agent count: [33m0[39m

[1A[2K📊 Step 2: Creating agent via API...

[1A[2K📊 Agent creation status: [33m201[39m

[1A[2K📊 Created agent ID: [33m1[39m

[1A[2K📊 Created agent name: Test Agent Worker 0

[1A[2K📊 Step 3: Verifying agent appears in list...

[1A[2K📊 Updated agent count: [33m1[39m

[1A[2K✅ Agent found in list with correct data

[1A[2K📊 Step 5: Testing UI integration...

[1A[2Ktests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution
📊 Step 3: Verifying agent in dashboard...

[1A[2K📊 Agent visible in dashboard: [33mtrue[39m

[1A[2K📊 Step 4: Navigating to canvas...

[1A[2Ktests/agent_creation_full.spec.ts:15:7 › Agent Creation Full Workflow › Complete agent creation and isolation test
📊 Agent visible in UI: [33mtrue[39m

[1A[2K✅ Agent successfully appears in UI

[1A[2K📊 Step 6: Creating second agent for isolation test...

[1A[2K📊 Second agent created with ID: [33m2[39m

[1A[2K📊 Step 7: Verifying agent isolation...

[1A[2K📊 Final agent count: [33m2[39m

[1A[2K📊 Worker-specific agent count: [33m2[39m

[1A[2K✅ Complete agent creation and isolation test passed!

[1A[2K[3/3] tests/comprehensive_debug.spec.ts:15:7 › Comprehensive Debug › Complete system debug and diagnosis
[1A[2Ktests/comprehensive_debug.spec.ts:15:7 › Comprehensive Debug › Complete system debug and diagnosis
🔍 Starting comprehensive debug test...

[1A[2K📊 Worker ID: 0

[1A[2K📊 NODE_ENV: test

[1A[2K🔍 Test 1: Basic connectivity

[1A[2K📊 Basic connectivity status: [33m200[39m

[1A[2K✅ Backend is accessible

[1A[2K🔍 Test 2: Header transmission

[1A[2K📊 Header transmission status: [33m200[39m

[1A[2K✅ Headers can be sent

[1A[2K🔍 Test 3: Agent GET endpoint

[1A[2K📊 Agent GET status: [33m200[39m

[1A[2K📊 Agent GET count: [33m2[39m

[1A[2K✅ Agent GET endpoint working

[1A[2K🔍 Test 4: Testing different database operations

[1A[2K📊 Testing user endpoint...

[1A[2K📊 User endpoint status: [33m200[39m

[1A[2K📊 User data available: [33mtrue[39m

[1A[2K🔍 Test 5: Workflow creation test

[1A[2K📊 Workflow creation status: [33m422[39m

[1A[2K❌ Workflow creation failed: {"detail":[{"type":"missing","loc":["body","canvas_data"],"msg":"Field required","input":{"name":"Test Workflow 0","description":"Test workflow for debugging"}}]}

[1A[2K🔍 Test 6: Minimal agent creation

[1A[2K📊 Minimal agent creation status: [33m201[39m

[1A[2K📊 Minimal agent created ID: [33m3[39m

[1A[2K✅ Agent creation working with mock model

[1A[2K🔍 Test 7: Database introspection

[1A[2K📊 System health status: [33m404[39m

[1A[2K✅ Comprehensive debug test complete

[1A[2Ktests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution
📊 Canvas visible: [33mfalse[39m

[1A[2K✅ Complete canvas workflow test finished

[1A[2K📊 Summary: Basic navigation and UI structure validated

[1A[2K📊 Next: UI implementation needed for full drag-and-drop workflow

[1A[2K  3 passed (11.6s)
