[1A[2K[2m[WebServer] [22m[build-only] 🔧 building frontend (debug)…

[1A[2K[2m[WebServer] [22m[build-only] 🏗  wasm-pack build …

[1A[2K[2m[WebServer] [22m[INFO]: 🎯  Checking for the Wasm target...

[1A[2K[2m[WebServer] [22m[INFO]: 🌀  Compiling to Wasm...

[1A[2K[2m[WebServer] [22mwarning: agent-platform-frontend@0.1.0: WebSocket types generated successfully

[1A[2K[2m[WebServer] [22m    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.04s

[1A[2K[2m[WebServer] [22m[INFO]: ⬇️  Installing wasm-bindgen...

[1A[2K[2m[WebServer] [22m[INFO]: Optional fields missing from Cargo.toml: 'description', 'repository', and 'license'. These are not necessary, but recommended

[1A[2K[2m[WebServer] [22m[INFO]: ✨   Done in 0.33s
[2m[WebServer] [22m[INFO]: 📦   Your wasm pkg is ready to publish at /Users/davidrose/git/zerg/frontend/pkg.

[1A[2K[2m[WebServer] [22m[build-only] 📦 copying WASM artifacts to www...

[1A[2K[2m[WebServer] [22m[build-only] ✍️  writing bootstrap.js …

[1A[2K[2m[WebServer] [22m[build-only] 🧩 generating index.html from template …

[1A[2K[2m[WebServer] [22m[build-only] ✍️  writing config.js …

[1A[2K[2m[WebServer] [22m[build-only] ✅ build complete (output in frontend/www/)

🚀 Setting up test environment...
✅ Pre-test cleanup completed
✅ Test environment setup completed

Running 6 tests using 2 workers

[1A[2K[1/6] [chromium] › tests/canvas_api_contract.spec.ts:10:7 › Canvas UI Tests › Canvas tab loads successfully without errors
[1A[2K[2/6] [chromium] › tests/agent_creation_full.spec.ts:15:7 › Agent Creation Full Workflow › Complete agent creation and isolation test
[1A[2K[chromium] › tests/agent_creation_full.spec.ts:15:7 › Agent Creation Full Workflow › Complete agent creation and isolation test
🔍 Starting complete agent creation test...

[1A[2K📊 Worker ID: 0

[1A[2K📊 Step 0: Resetting database...

[1A[2K[2m[WebServer] [22mWARNING - Resetting database - dropping all tables

[1A[2K✅ Database reset successful

[1A[2K📊 Step 1: Verifying empty state...

[1A[2K[2m[WebServer] [22mERROR - Database session rolled back due to error: (1001, None)

[1A[2K[3/6] [chromium] › tests/canvas_api_contract.spec.ts:36:7 › Canvas UI Tests › Canvas persists state when switching tabs
[1A[2K📊 Initial agent count: [33m0[39m

[1A[2K📊 Step 2: Creating agent via API...

[1A[2K📊 Agent creation status: [33m201[39m

[1A[2K📊 Created agent ID: [33m1[39m

[1A[2K📊 Created agent name: Test Agent Worker 0

[1A[2K📊 Step 3: Verifying agent appears in list...

[1A[2K📊 Updated agent count: [33m1[39m

[1A[2K✅ Agent found in list with correct data

[1A[2K📊 Step 5: Testing UI integration...

[1A[2K[2m[WebServer] [22mERROR - Database session rolled back due to error: (1001, None)

[1A[2K[4/6] [chromium] › tests/canvas_api_contract.spec.ts:58:7 › Canvas UI Tests › Canvas workspace is interactive
[1A[2K[2m[WebServer] [22mERROR - Database session rolled back due to error: (1001, None)

[1A[2K[5/6] [chromium] › tests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution
[1A[2K[chromium] › tests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution
🚀 Starting complete canvas workflow test...

[1A[2K📊 Worker ID: 1

[1A[2K📊 Step 1: Creating test agent...

[1A[2K✅ Test agent created with ID: [33m1[39m

[1A[2K📊 Step 2: Navigating to application...

[1A[2K[chromium] › tests/agent_creation_full.spec.ts:15:7 › Agent Creation Full Workflow › Complete agent creation and isolation test
📊 Agent visible in UI: [33mtrue[39m

[1A[2K✅ Agent successfully appears in UI

[1A[2K📊 Step 6: Creating second agent for isolation test...

[1A[2K📊 Second agent created with ID: [33m2[39m

[1A[2K📊 Step 7: Verifying agent isolation...

[1A[2K📊 Final agent count: [33m2[39m

[1A[2K📊 Worker-specific agent count: [33m2[39m

[1A[2K✅ Complete agent creation and isolation test passed!

[1A[2K[2m[WebServer] [22mERROR - Database session rolled back due to error: (1001, None)

[1A[2K[6/6] [chromium] › tests/comprehensive_debug.spec.ts:15:7 › Comprehensive Debug › Complete system debug and diagnosis
[1A[2K[chromium] › tests/comprehensive_debug.spec.ts:15:7 › Comprehensive Debug › Complete system debug and diagnosis
🔍 Starting comprehensive debug test...

[1A[2K📊 Worker ID: 0

[1A[2K📊 NODE_ENV: test

[1A[2K📊 Backend URL: http://localhost:47300

[1A[2K🔍 Test 1: Basic connectivity

[1A[2K📊 Basic connectivity status: [33m200[39m

[1A[2K✅ Backend is accessible

[1A[2K🔍 Test 2: Header transmission

[1A[2K📊 Header transmission status: [33m200[39m

[1A[2K✅ Headers can be sent

[1A[2K🔍 Test 3: Agent GET endpoint

[1A[2K📊 Agent GET status: [33m200[39m

[1A[2K📊 Agent GET count: [33m2[39m

[1A[2K✅ Agent GET endpoint working

[1A[2K🔍 Test 4: Testing different database operations

[1A[2K📊 Testing user endpoint...

[1A[2K📊 User endpoint status: [33m200[39m

[1A[2K📊 User data available: [33mtrue[39m

[1A[2K🔍 Test 5: Workflow creation test

[1A[2K📊 Workflow creation status: [33m422[39m

[1A[2K❌ Workflow creation failed: {"detail":[{"type":"missing","loc":["body","canvas"],"msg":"Field required","input":{"name":"Test Workflow 0","description":"Test workflow for debugging"}}]}

[1A[2K🔍 Test 6: Minimal agent creation

[1A[2K📊 Minimal agent creation status: [33m201[39m

[1A[2K📊 Minimal agent created ID: [33m3[39m

[1A[2K✅ Agent creation working with mock model

[1A[2K🔍 Test 7: System health

[1A[2K📊 System health status: [33m200[39m

[1A[2K📊 System health: {"status":"ok","db":{"status":"ok"},"ws":{"available":true,"active_connections":1,"topics":3}}

[1A[2K✅ Comprehensive debug test complete

[1A[2K[chromium] › tests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution
📊 Step 3: Verifying agent in dashboard...

[1A[2K📊 Agent visible in dashboard: [33mtrue[39m

[1A[2K📊 Step 4: Navigating to canvas...

[1A[2K📊 Canvas visible: [33mtrue[39m

[1A[2K✅ Canvas loaded successfully

[1A[2K📊 Step 5: Checking agent shelf...

[1A[2K📊 Agent shelf visible: [33mtrue[39m

[1A[2K📊 Agent visible in shelf: [33mtrue[39m

[1A[2K✅ Agent found in shelf - ready for drag and drop

[1A[2K📊 Step 7: Checking tool palette...

[1A[2K📊 Tool palette visible: [33mtrue[39m

[1A[2K[2m[WebServer] [22mERROR - Database session rolled back due to error: (1001, None)

[1A[2K[7/6] (retries) [chromium] › tests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution (retry #1)
[1A[2K🚀 Starting complete canvas workflow test...

[1A[2K📊 Worker ID: 2

[1A[2K📊 Step 1: Creating test agent...

[1A[2K✅ Test agent created with ID: [33m1[39m

[1A[2K📊 Step 2: Navigating to application...

[1A[2K📊 Step 3: Verifying agent in dashboard...

[1A[2K📊 Agent visible in dashboard: [33mtrue[39m

[1A[2K📊 Step 4: Navigating to canvas...

[1A[2K📊 Canvas visible: [33mtrue[39m

[1A[2K✅ Canvas loaded successfully

[1A[2K📊 Step 5: Checking agent shelf...

[1A[2K📊 Agent shelf visible: [33mtrue[39m

[1A[2K📊 Agent visible in shelf: [33mtrue[39m

[1A[2K✅ Agent found in shelf - ready for drag and drop

[1A[2K📊 Step 7: Checking tool palette...

[1A[2K📊 Tool palette visible: [33mtrue[39m

[1A[2K[2m[WebServer] [22mERROR - Database session rolled back due to error: (1001, None)

[1A[2K  1) [chromium] › tests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution 

    Error: locator.isVisible: Error: strict mode violation: locator('#agent-shelf').locator('text=HTTP') resolved to 3 elements:
        1) <div class="palette-node-description">Trigger from HTTP webhook</div> aka getByText('Trigger from HTTP webhook')
        2) <div class="palette-node-name">HTTP Request</div> aka getByText('HTTP Request')
        3) <div class="palette-node-description">Make HTTP API calls</div> aka getByText('Make HTTP API calls')

    Call log:
    [2m    - checking visibility of locator('#agent-shelf').locator('text=HTTP')[22m


      88 |           if (toolPaletteVisible) {
      89 |             // Look for HTTP/URL tools
    > 90 |             const httpToolVisible = await page.locator('#agent-shelf').locator('text=HTTP').isVisible();
         |                                                                                             ^
      91 |             const urlToolVisible = await page.locator('#agent-shelf').locator('text=URL').isVisible();
      92 |             console.log('📊 HTTP tool visible:', httpToolVisible);
      93 |             console.log('📊 URL tool visible:', urlToolVisible);
        at /Users/davidrose/git/zerg/e2e/tests/canvas_complete_workflow.spec.ts:90:93

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/canvas_complete_workflow-C-c6777-th-agent-and-tool-execution-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results/canvas_complete_workflow-C-c6777-th-agent-and-tool-execution-chromium/error-context.md

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/canvas_complete_workflow-C-c6777-th-agent-and-tool-execution-chromium/trace.zip
    Usage:

        npx playwright show-trace test-results/canvas_complete_workflow-C-c6777-th-agent-and-tool-execution-chromium/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: locator.isVisible: Error: strict mode violation: locator('#agent-shelf').locator('text=HTTP') resolved to 3 elements:
        1) <div class="palette-node-description">Trigger from HTTP webhook</div> aka getByText('Trigger from HTTP webhook')
        2) <div class="palette-node-name">HTTP Request</div> aka getByText('HTTP Request')
        3) <div class="palette-node-description">Make HTTP API calls</div> aka getByText('Make HTTP API calls')

    Call log:
    [2m    - checking visibility of locator('#agent-shelf').locator('text=HTTP')[22m


      88 |           if (toolPaletteVisible) {
      89 |             // Look for HTTP/URL tools
    > 90 |             const httpToolVisible = await page.locator('#agent-shelf').locator('text=HTTP').isVisible();
         |                                                                                             ^
      91 |             const urlToolVisible = await page.locator('#agent-shelf').locator('text=URL').isVisible();
      92 |             console.log('📊 HTTP tool visible:', httpToolVisible);
      93 |             console.log('📊 URL tool visible:', urlToolVisible);
        at /Users/davidrose/git/zerg/e2e/tests/canvas_complete_workflow.spec.ts:90:93

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/canvas_complete_workflow-C-c6777-th-agent-and-tool-execution-chromium-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results/canvas_complete_workflow-C-c6777-th-agent-and-tool-execution-chromium-retry1/error-context.md

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/canvas_complete_workflow-C-c6777-th-agent-and-tool-execution-chromium-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/canvas_complete_workflow-C-c6777-th-agent-and-tool-execution-chromium-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────


🧹 Starting test environment cleanup...
✅ Test database cleanup completed
✅ Test environment cleanup completed
[1A[2K  1 failed
    [chromium] › tests/canvas_complete_workflow.spec.ts:17:7 › Complete Canvas Workflow › End-to-end canvas workflow with agent and tool execution 
  5 passed (20.3s)
