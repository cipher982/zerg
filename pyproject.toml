[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["I", "E", "F", "Q000"]
ignore = []

# Ignore E402 (import not at top of file) for all test files
[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = ["E402"]
"backend/tests/**/*.py" = ["E402"]
"backend/zerg/generated/*.py" = ["E501"]
"backend/zerg/generated/**/*.py" = ["E501"]
"**/generated/*.py" = ["E501"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "zerg-backend"
dynamic = ["version"]
description = "Zerg Agent Platform Backend"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Zerg Team"},
]
dependencies = [
    # Core dependencies will be specified elsewhere
]

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest",
    "pytest-asyncio",
    "pact-python",
    "jsonschema-rs",
    "hypothesis",
    "hypothesis-jsonschema",
    "pre-commit",
    "psycopg[binary]",
    "testcontainers",
    "docker",
]

[dependency-groups]
dev = [
    "pre-commit",
]

# Build hooks for automatic WebSocket type generation
[tool.hatch.build.hooks.custom]
path = "build_hooks.py"

[tool.hatch.build.targets.wheel.hooks.custom]
path = "build_hooks.py"

[tool.pytest.ini_options]
# Tell pytest where to find tests when run from the root
testpaths = ["backend/tests"]

# Add the backend directory to sys.path so imports work
# Use "." if backend code is directly in 'backend', or "backend/src" if using a src layout
pythonpath = ["backend"]

# Recommended import mode for cleaner behavior
addopts = "--import-mode=importlib" 
