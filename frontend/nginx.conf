events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    # Docker embedded DNS resolver; safe to declare at build-time
    resolver 127.0.0.11 ipv6=off valid=30s;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/wasm;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Defer upstream resolution to runtime (prevents nginx -t failures during image build)
        set $backend_upstream http://backend:8000;

        # --- API proxying (same-origin) ---
        # WebSocket endpoint must be defined before the generic /api/ location
        location /api/ws {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass $backend_upstream;
        }

        location /api/ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass $backend_upstream;
        }

        # WASM files with caching (MIME type from mime.types)
        location ~ \.wasm$ {
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        # Security headers for Google OAuth
        add_header Cross-Origin-Opener-Policy "same-origin-allow-popups" always;
        add_header Cross-Origin-Embedder-Policy "unsafe-none" always;

        # Static assets
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
